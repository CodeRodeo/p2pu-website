name: "Terraform"

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  #jekyll:
  #  name: "Terraform"
  #  runs-on: ubuntu-latest
  #    - name: Build the site in the jekyll/builder container
  #      run: |
  #        docker run \
  #        -v ${{ github.workspace }}:/srv/jekyll -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
  #        jekyll/builder:latest /bin/bash -c "chmod 777 /srv/jekyll && jekyll build --future"

  terraform:
    name: "Terraform"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        id: init
        run: terraform init --backend-config="key=tfstate/p2pu-website/${{ steps.extract_branch.outputs.branch }}"
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      #- name: Terraform Format
      #  id: fmt
      #  run: terraform fmt -check

      - name: Terraform apply
        id: apply
        if: github.event_name == 'pull_request'
        run: terraform apply -auto-approve
        #continue-on-error: true
        env:
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Terraform var
        id: site_url
        run: terraform output site_url

      - uses: actions/github-script@0.9.0
        if: github.event_name == 'pull_request'
        env:
          APPLY: "terraform\n${{ steps.apply.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Site URL \`${{ steps.site_url.outpus.stdout }}\`
            #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Apply üìñ\`${{ steps.apply.outcome }}\`
            <details><summary>Show Plan</summary>
            \`\`\`${process.env.APPLY}\`\`\`
            </details>
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
              
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
#      - name: Terraform Plan Status
#        if: steps.apply.outcome == 'failure'
#        run: exit 1
